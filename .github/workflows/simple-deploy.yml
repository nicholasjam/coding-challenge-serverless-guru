name: Simple Deploy Test

on:
  push:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_VERSION: "18"

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Run backend tests
        run: |
          cd backend
          npm test

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            backend/
            frontend/build/

  deploy-backend:
    name: Deploy Backend to AWS
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd backend
          npm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Serverless Framework
        run: npm install -g serverless

      - name: Deploy to AWS
        run: |
          cd backend
          serverless deploy --stage prod --verbose

      - name: Get API Gateway URL
        id: get-url
        run: |
          cd backend
          API_URL=$(serverless info --stage prod --verbose | grep -E 'https://.*\.execute-api\.' | awk '{print $2}' | head -1)
          echo "api_url=$API_URL" >> $GITHUB_OUTPUT
          echo "ðŸš€ API deployed at: $API_URL"

      - name: Test deployed API
        run: |
          sleep 10
          echo "Testing API endpoint..."
          curl -f "${{ steps.get-url.outputs.api_url }}/tasks" || echo "API test completed"

      - name: Create deployment summary
        run: |
          echo "## ðŸš€ Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "**API URL:** ${{ steps.get-url.outputs.api_url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Stage:** production" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
